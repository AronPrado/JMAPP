Index: app/src/main/java/com/javierprado/jmapp/view/activities/menus/MenuAdministradorActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.javierprado.jmapp.view.activities.menus\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.Menu\r\nimport android.view.MenuItem\r\nimport android.widget.ImageView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.ActionBarDrawerToggle\r\nimport androidx.core.view.GravityCompat\r\nimport androidx.drawerlayout.widget.DrawerLayout\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.javierprado.jmapp.R\r\nimport com.javierprado.jmapp.model.NewsAdapter\r\nimport com.javierprado.jmapp.data.retrofit.ColegioAPI\r\nimport com.javierprado.jmapp.data.retrofit.RetrofitHelper\r\nimport com.javierprado.jmapp.data.util.ExtraFunctions\r\nimport com.javierprado.jmapp.data.util.RoleType\r\nimport com.javierprado.jmapp.view.NotiEventosEsco\r\nimport com.javierprado.jmapp.view.activities.agregar.RegisterApoderadoActivity\r\nimport com.javierprado.jmapp.view.activities.agregar.RegisterDocenteActivity\r\nimport com.javierprado.jmapp.view.activities.control.ControlHorarioActivity\r\nimport com.javierprado.jmapp.view.activities.control.ControlNoticiaActivity\r\nimport com.javierprado.jmapp.view.login.OptionLogin\r\n\r\nclass MenuAdministradorActivity : AppCompatActivity(), NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    private lateinit var drawer: DrawerLayout\r\n    private lateinit var toogle: ActionBarDrawerToggle\r\n\r\n    private lateinit var recyclerView: RecyclerView\r\n    private lateinit var btnMasRecientes: ImageView\r\n\r\n    private lateinit var auth: FirebaseAuth\r\n    private lateinit var api : ColegioAPI\r\n\r\n    val TOKEN = \"token\"\r\n    var tokenAdmin = \"\"\r\n\r\n    private var extraFuns : ExtraFunctions = ExtraFunctions()\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_menu_administrador)\r\n\r\n        btnMasRecientes = findViewById(R.id.btn_mas_reciente)\r\n        //API Y BUNDLE\r\n        val retro = RetrofitHelper.getInstanceStatic()\r\n        val bundle = intent.extras\r\n        if (bundle != null) {\r\n            val token = bundle.getString(TOKEN, \"\")\r\n            tokenAdmin=token\r\n            retro.setBearerToken(tokenAdmin)\r\n        }\r\n        api = retro.getApi()\r\n        //Noticias\r\n        recyclerView = findViewById(R.id.recyclerViewNews)\r\n        recyclerView.layoutManager = LinearLayoutManager(this)\r\n\r\n        actualizarNoticias(retro.getBearerToken())\r\n        btnMasRecientes.setOnClickListener { actualizarNoticias(retro.getBearerToken()) }\r\n\r\n        auth = FirebaseAuth.getInstance()\r\n\r\n        val toolbar: androidx.appcompat.widget.Toolbar = findViewById(R.id.toolbar_main)\r\n        setSupportActionBar(toolbar)\r\n\r\n        drawer = findViewById(R.id.drawer_layout)\r\n\r\n        toogle = ActionBarDrawerToggle(this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close)\r\n\r\n        drawer.addDrawerListener(toogle)\r\n\r\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\r\n        supportActionBar?.setHomeButtonEnabled(true)\r\n\r\n        val navigationView: NavigationView = findViewById(R.id.nav_view_administrador)\r\n        navigationView.setNavigationItemSelectedListener(this)\r\n    }\r\n\r\n    override fun onNavigationItemSelected(item: MenuItem): Boolean {\r\n        when(item.itemId){\r\n            R.id.nav_item_1 -> Toast.makeText(this, \"Inicio\", Toast.LENGTH_SHORT).show()\r\n            R.id.nav_item_2 -> {\r\n                val intent = Intent(this, RegisterApoderadoActivity::class.java)\r\n                intent.putExtra(RegisterApoderadoActivity().TOKEN, tokenAdmin)\r\n                startActivity(intent)\r\n            }\r\n            R.id.nav_item_3 -> {\r\n                val intent = Intent(this, RegisterDocenteActivity::class.java)\r\n                intent.putExtra(RegisterDocenteActivity().TOKEN, tokenAdmin)\r\n                startActivity(intent)\r\n            }\r\n            R.id.nav_item_4 -> {\r\n                Toast.makeText(this, \"Redactar y Enviar Notificaciones\", Toast.LENGTH_SHORT).show()\r\n                val intent = Intent(this, NotiEventosEsco::class.java)\r\n                startActivity(intent)\r\n            }\r\n            R.id.nav_item_5 -> {\r\n                Toast.makeText(this, \"Editar Horario Escolar\", Toast.LENGTH_SHORT).show()\r\n                val intent = Intent(this, ControlHorarioActivity::class.java)\r\n                intent.putExtra(ControlHorarioActivity().TOKEN, tokenAdmin)\r\n                intent.putExtra(ControlHorarioActivity().ROLE, RoleType.ADMIN.name)\r\n                startActivity(intent)\r\n            }\r\n            R.id.nav_item_6 -> {\r\n                val intent = Intent(this, ControlNoticiaActivity::class.java)\r\n                intent.putExtra(ControlNoticiaActivity().TOKEN, tokenAdmin)\r\n                startActivity(intent)\r\n                Toast.makeText(this, \"Agregar Noticia\", Toast.LENGTH_SHORT).show()\r\n            }\r\n            R.id.nav_item_7 -> Toast.makeText(this, \"Docentes Registrados\", Toast.LENGTH_SHORT).show()\r\n            R.id.nav_item_8 ->  {\r\n                auth.signOut()\r\n                val intent = Intent(this, OptionLogin::class.java)\r\n                intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP\r\n                startActivity(intent)\r\n            }\r\n        }\r\n\r\n        drawer.closeDrawer(GravityCompat.START)\r\n        return true\r\n    }\r\n\r\n    //Iconos del Toolbar\r\n    override fun onCreateOptionsMenu(menu: Menu): Boolean {\r\n        menuInflater.inflate(R.menu.perfil_noti_main, menu)\r\n        return true\r\n    }\r\n\r\n    override fun onOptionsItemSelected(item: MenuItem): Boolean {\r\n        return when (item.itemId) {\r\n            R.id.action_perfil -> {\r\n\r\n                true\r\n            }\r\n            R.id.action_notificaciones -> {\r\n\r\n                true\r\n            }\r\n            else -> super.onOptionsItemSelected(item)\r\n        }\r\n    }\r\n    fun actualizarNoticias(token: String){\r\n        val adapter = NewsAdapter(this@MenuAdministradorActivity, ArrayList(), api, token, false)\r\n        extraFuns.listarNoticias(api, adapter, this@MenuAdministradorActivity)\r\n        recyclerView.adapter = adapter\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/javierprado/jmapp/view/activities/menus/MenuAdministradorActivity.kt b/app/src/main/java/com/javierprado/jmapp/view/activities/menus/MenuAdministradorActivity.kt
--- a/app/src/main/java/com/javierprado/jmapp/view/activities/menus/MenuAdministradorActivity.kt	(revision 794043868e2c70d2230fb45521e2031a198e0f73)
+++ b/app/src/main/java/com/javierprado/jmapp/view/activities/menus/MenuAdministradorActivity.kt	(date 1712787086773)
@@ -25,6 +25,8 @@
 import com.javierprado.jmapp.view.activities.agregar.RegisterDocenteActivity
 import com.javierprado.jmapp.view.activities.control.ControlHorarioActivity
 import com.javierprado.jmapp.view.activities.control.ControlNoticiaActivity
+import com.javierprado.jmapp.view.activities.notificaciones.RegistroDeNotificacionActivity
+import com.javierprado.jmapp.view.fragments.RegistroDeNotificacionFragment
 import com.javierprado.jmapp.view.login.OptionLogin
 
 class MenuAdministradorActivity : AppCompatActivity(), NavigationView.OnNavigationItemSelectedListener {
@@ -96,7 +98,7 @@
             }
             R.id.nav_item_4 -> {
                 Toast.makeText(this, "Redactar y Enviar Notificaciones", Toast.LENGTH_SHORT).show()
-                val intent = Intent(this, NotiEventosEsco::class.java)
+                val intent = Intent(this, RegistroDeNotificacionActivity::class.java)
                 startActivity(intent)
             }
             R.id.nav_item_5 -> {
Index: app/src/main/java/com/javierprado/jmapp/view/fragments/RegistroDeNotificacionFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/javierprado/jmapp/view/fragments/RegistroDeNotificacionFragment.kt b/app/src/main/java/com/javierprado/jmapp/view/fragments/RegistroDeNotificacionFragment.kt
new file mode 100644
--- /dev/null	(date 1712807529748)
+++ b/app/src/main/java/com/javierprado/jmapp/view/fragments/RegistroDeNotificacionFragment.kt	(date 1712807529748)
@@ -0,0 +1,149 @@
+package com.javierprado.jmapp.view.fragments
+
+import android.os.Bundle
+import android.text.Editable
+import android.text.TextWatcher
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.ArrayAdapter
+import android.widget.AutoCompleteTextView
+import android.widget.Button
+import android.widget.EditText
+import android.widget.Toast
+import androidx.fragment.app.Fragment
+import com.google.firebase.firestore.FirebaseFirestore
+import com.javierprado.jmapp.R
+
+class RegistroDeNotificacionFragment : Fragment() {
+
+    private lateinit var botonEnviar: Button
+    private lateinit var tituloEditText: EditText
+    private lateinit var descripcionEditText: EditText
+    private lateinit var autoCompleteTextView: AutoCompleteTextView
+
+    private var destinatarioSeleccionado: String = ""
+    private var titulo: String = ""
+    private var descripcion: String = ""
+
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+
+        val view = inflater.inflate(R.layout.fragment_registro_de_noticiaciones, container, false)
+
+        autoCompleteTextView = view.findViewById(R.id.autoCompleteTextView)
+        botonEnviar = view.findViewById(R.id.fg_btn_funcion)
+        tituloEditText = view.findViewById(R.id.txt_NotiTitulo)
+        descripcionEditText = view.findViewById(R.id.txt_NotiDescrip)
+
+        // Agregar TextWatchers a los EditText
+        tituloEditText.addTextChangedListener(textWatcher)
+        descripcionEditText.addTextChangedListener(textWatcher)
+
+        // Deshabilitar el botón al inicio
+        botonEnviar.isEnabled = false
+
+        return view
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        // Configurar el adaptador para el AutoCompleteTextView
+        val adapter = ArrayAdapter<String>(requireContext(), android.R.layout.simple_dropdown_item_1line)
+        autoCompleteTextView.setAdapter(adapter)
+
+        // Manejar el evento de cambio de texto en el AutoCompleteTextView
+        autoCompleteTextView.addTextChangedListener(object : TextWatcher {
+            override fun afterTextChanged(s: Editable?) {
+                val nombreCompleto = s.toString()
+                if (nombreCompleto.isNotBlank()) {
+                    val nombres = nombreCompleto.split(" ")
+                    if (nombres.size >= 2) {
+                        val nombre = nombres[0]
+                        val apellido = nombres[1]
+                        buscarUsuarios(nombre, apellido)
+                    }
+                } else {
+                    // Limpiar la lista de sugerencias si el campo está vacío
+                    adapter.clear()
+                }
+            }
+
+            override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {}
+
+            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {}
+        })
+
+        // Agregar un listener para manejar la selección de usuario en el AutoCompleteTextView
+        autoCompleteTextView.setOnItemClickListener { parent, _, position, _ ->
+            destinatarioSeleccionado = parent.getItemAtPosition(position) as String
+        }
+
+        // lógica del botón
+        botonEnviar.setOnClickListener {
+            titulo = tituloEditText.text.toString()
+            descripcion = descripcionEditText.text.toString()
+
+            // Verificar si los campos están completos
+            if (titulo.isNotEmpty() && descripcion.isNotEmpty() && destinatarioSeleccionado.isNotEmpty()) {
+                // Enviar Noti
+                enviarNotificacion(destinatarioSeleccionado, titulo, descripcion)
+            } else {
+                // Mostrar mensaje de error si falta algún campo
+                Toast.makeText(requireContext(), "Por favor completa todos los campos", Toast.LENGTH_SHORT).show()
+            }
+        }
+    }
+
+    private fun buscarUsuarios(nombre: String, apellido: String) {
+        val db = FirebaseFirestore.getInstance()
+        val usuariosRef = db.collection("usuarios")
+
+        // Realizar la consulta en Firestore
+        usuariosRef.whereEqualTo("nombres", nombre)
+            .whereEqualTo("apellidos", apellido)
+            .get()
+            .addOnSuccessListener { result ->
+                val usuarios = mutableListOf<String>()
+                for (document in result) {
+                    val nombreCompleto = "${document.getString("nombres")} ${document.getString("apellidos")}"
+                    usuarios.add(nombreCompleto)
+                }
+                // Actualizar el adaptador con los resultados de la búsqueda
+                val adapter = ArrayAdapter(requireContext(), android.R.layout.simple_dropdown_item_1line, usuarios)
+                autoCompleteTextView.setAdapter(adapter)
+            }
+            .addOnFailureListener { exception ->
+                // Manejar errores
+            }
+    }
+
+    private fun enviarNotificacion(destinatario: String, titulo: String, descripcion: String) {
+        // Aquí iría la lógica para enviar la notificación
+        // Mostrar mensaje de envío correcto
+        Toast.makeText(requireContext(), "Notificación enviada correctamente", Toast.LENGTH_SHORT).show()
+
+        // Regresar a la actividad anterior
+        requireActivity().finish()
+    }
+
+    private val textWatcher = object : TextWatcher {
+        override fun afterTextChanged(s: Editable?) {
+            // Verificar si todos los campos están llenos para habilitar el botón
+            val titulo = tituloEditText.text.toString().trim()
+            val descripcion = descripcionEditText.text.toString().trim()
+            botonEnviar.isEnabled =
+                titulo.isNotEmpty() && descripcion.isNotEmpty() && destinatarioSeleccionado.isNotEmpty()
+        }
+
+        override fun beforeTextChanged(s: CharSequence?, start: Int, count: Int, after: Int) {
+        }
+
+        override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {
+        }
+    }
+}
Index: app/src/main/res/layout/fragment_registro_de_noticiaciones.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_registro_de_noticiaciones.xml b/app/src/main/res/layout/fragment_registro_de_noticiaciones.xml
new file mode 100644
--- /dev/null	(date 1712805881855)
+++ b/app/src/main/res/layout/fragment_registro_de_noticiaciones.xml	(date 1712805881855)
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/md_theme_dark_outline"
+    tools:context=".view.fragments.RegistroDeNotificacionFragment">
+
+    <androidx.constraintlayout.widget.Guideline
+        android:id="@+id/guideline_start"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        app:layout_constraintGuide_percent="0.1" />
+    <androidx.constraintlayout.widget.Guideline
+        android:id="@+id/guideline_end"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        app:layout_constraintGuide_percent="0.9" />
+    <androidx.cardview.widget.CardView
+        android:id="@+id/cv_nombre"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        app:cardCornerRadius="16dp"
+        app:cardElevation="34dp"
+        android:layout_marginBottom="40dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="@id/guideline_end"
+        app:layout_constraintStart_toStartOf="@id/guideline_start"
+        app:layout_constraintTop_toTopOf="parent">
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical"
+                android:paddingHorizontal="24dp"
+                android:paddingTop="32dp"
+                android:paddingBottom="24dp"
+                android:layout_marginLeft="12dp"
+                android:layout_marginRight="12dp">
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical"
+                    android:layout_marginTop="8dp"
+                    android:layout_marginBottom="8dp">
+                    <TextView
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Titulo:"
+                        android:maxLines="1"
+                        android:ellipsize="end"
+                        android:textSize="20sp"
+                        android:textStyle="bold" />
+                    <EditText
+                        android:id="@+id/txt_NotiTitulo"
+                        android:layout_width="match_parent"
+                        android:layout_height="25dp"
+                        android:layout_gravity="left"
+                        app:layout_constrainedHeight="true"
+                        android:textSize="15sp"
+                        android:textStyle="bold"
+                        android:background="@color/nude"
+                        android:inputType="text" />
+                    <TextView
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Descripción:"
+                        android:maxLines="1"
+                        android:ellipsize="end"
+                        android:textSize="20sp"
+                        android:textStyle="bold" />
+                    <EditText
+                        android:id="@+id/txt_NotiDescrip"
+                        android:layout_width="match_parent"
+                        android:layout_height="25dp"
+                        android:layout_gravity="left"
+                        app:layout_constrainedHeight="true"
+                        android:textSize="15sp"
+                        android:textStyle="bold"
+                        android:background="@color/nude"
+                        android:inputType="text" />
+                </LinearLayout>
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:orientation="vertical"
+                    android:layout_marginTop="4dp"
+                    android:layout_marginBottom="8dp">
+                    <TextView
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:text="Destinatario:"
+                        android:maxLines="1"
+                        android:ellipsize="end"
+                        android:textSize="20sp"
+                        android:textStyle="bold" />
+                    <AutoCompleteTextView
+                        android:id="@+id/autoCompleteTextView"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:hint="Buscar destinatario"
+                        android:background="@color/nude"
+                        android:textSize="15sp"
+                        android:textStyle="bold"
+                        android:inputType="text" />
+
+                </LinearLayout>
+            </LinearLayout>
+            <com.google.android.material.progressindicator.CircularProgressIndicator
+                android:id="@+id/pb_nombre"
+                android:layout_gravity="center"
+                android:indeterminate="true"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"/>
+        </FrameLayout>
+    </androidx.cardview.widget.CardView>
+    <Button
+        android:id="@+id/fg_btn_funcion"
+        android:layout_width="300dp"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:textColor="@color/white"
+        android:textSize="35sp"
+        android:layout_marginVertical="15dp"
+        android:text="Enviar"
+        android:backgroundTint="@color/md_theme_light_tertiary"
+        android:padding="0dp"
+        android:fontFamily="@font/librefranklin_extrabolditalic"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/cv_nombre" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/javierprado/jmapp/view/activities/notificaciones/RegistroDeNotificacionActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/javierprado/jmapp/view/activities/notificaciones/RegistroDeNotificacionActivity.kt b/app/src/main/java/com/javierprado/jmapp/view/activities/notificaciones/RegistroDeNotificacionActivity.kt
new file mode 100644
--- /dev/null	(date 1712788585253)
+++ b/app/src/main/java/com/javierprado/jmapp/view/activities/notificaciones/RegistroDeNotificacionActivity.kt	(date 1712788585253)
@@ -0,0 +1,20 @@
+package com.javierprado.jmapp.view.activities.notificaciones
+
+import android.os.Bundle
+import android.view.View
+import androidx.appcompat.app.AppCompatActivity
+import com.google.android.material.progressindicator.CircularProgressIndicator
+import com.javierprado.jmapp.R
+import com.javierprado.jmapp.view.fragments.RegistroDeNotificacionFragment
+
+class RegistroDeNotificacionActivity : AppCompatActivity() {
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        setContentView(R.layout.activity_registro_de_notificacion)
+
+        supportFragmentManager.beginTransaction()
+            .replace(R.id.fcv_rnotificaciones_main, RegistroDeNotificacionFragment())
+            .commit()
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_registro_de_notificacion.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_registro_de_notificacion.xml b/app/src/main/res/layout/activity_registro_de_notificacion.xml
new file mode 100644
--- /dev/null	(date 1712788110506)
+++ b/app/src/main/res/layout/activity_registro_de_notificacion.xml	(date 1712788110506)
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_constrainedHeight="true"
+    tools:context=".view.activities.notificaciones.RegistroDeNotificacionActivity">
+
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/tb_noti_rnotificaciones"
+        android:layout_width="match_parent"
+        android:layout_height="?android:attr/actionBarSize"
+        android:background="@color/toolbar"
+        android:elevation="24dp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:gravity="center_vertical"
+            android:orientation="horizontal">
+
+            <ImageView
+                android:id="@+id/back"
+                android:layout_width="wrap_content"
+                android:layout_height="45dp"
+                android:paddingStart="16dp"
+                android:paddingEnd="16dp"
+                android:src="@drawable/baseline_arrow_back_24" />
+
+            <TextView
+                android:id="@+id/tv_title_control_noticia"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:fontFamily="@font/librefranklin_mediumitalic"
+                android:gravity="start|center_vertical"
+                android:paddingStart="4dp"
+                android:text="Redactar Notificaciones"
+                android:textColor="@color/white"
+                android:textSize="25sp"
+                android:textStyle="bold" />
+        </LinearLayout>
+    </androidx.appcompat.widget.Toolbar>
+
+    <androidx.fragment.app.FragmentContainerView
+        android:id="@+id/fcv_rnotificaciones_main"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/tb_noti_rnotificaciones"/>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.KILL_BACKGROUND_PROCESSES\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"\r\n        android:maxSdkVersion=\"32\" />\r\n\r\n    <application\r\n        android:name=\".view.activities.MyApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.JMAPP\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".view.activities.comunicacion.ChatApoderadoDocenteActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.comunicacion.ChatDocenteApoderadoActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.control.ControlSeleccionActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.editar.ActualizarInfoApoderadoActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.control.ControlHorarioActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.control.ControlNoticiaActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.agregar.RegisterDocenteActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.agregar.RegisterApoderadoActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activity_noticias\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.login.LoginAdmin\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.login.LoginDocente\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.login.LoginActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.menus.MenuAdministradorActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.NotiEventosEsco\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.menus.MenuDocenteActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.menus.MenuApoderadoActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.Seleccion_Sesion_Activity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.MensajeDocente\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.login.OptionLogin\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.activities.editar.ResetPasswordActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.MenuPrincipalApoderadoActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".view.MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <service android:name=\"com.javierprado.jmapp.notificaciones.FirebaseService\"\r\n            android:permission=\"com.google.android.c2dm.permission.SEND\"\r\n            android:exported=\"false\"\r\n            android:enabled=\"true\">\r\n\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n                <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\r\n\r\n            </intent-filter>\r\n        </service>\r\n\r\n        <receiver android:name=\"com.javierprado.jmapp.notificaciones.NotificationReply\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 794043868e2c70d2230fb45521e2031a198e0f73)
+++ b/app/src/main/AndroidManifest.xml	(date 1712787289248)
@@ -22,6 +22,8 @@
         android:theme="@style/Theme.JMAPP"
         android:usesCleartextTraffic="true"
         tools:targetApi="31">
+        <activity android:name=".view.activities.notificaciones.RegistroDeNotificacionActivity"
+            android:exported="true"/>
         <activity
             android:name=".view.activities.comunicacion.ChatApoderadoDocenteActivity"
             android:exported="true" />
Index: app/src/main/java/com/javierprado/jmapp/view/login/OptionLogin.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.javierprado.jmapp.view.login\r\n\r\nimport android.content.Intent\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.view.View\r\nimport android.widget.LinearLayout\r\nimport com.javierprado.jmapp.R\r\n\r\nclass OptionLogin : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_option_login)\r\n\r\n        // Obteniendo referencias a los layouts de Administrador, Apoderado y Docente\r\n        val lyAdmin = findViewById<LinearLayout>(R.id.lyAdmin)\r\n        val lyApoderado = findViewById<LinearLayout>(R.id.lyApoderado)\r\n        val lyDocente = findViewById<LinearLayout>(R.id.lyDocente)\r\n\r\n        // Agregando listeners de clics a los layouts\r\n        lyAdmin.setOnClickListener {\r\n            // Abrir la actividad de login para el Administrador\r\n            val intent = Intent(this@OptionLogin, LoginAdmin::class.java)\r\n            intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP\r\n            startActivity(intent)\r\n        }\r\n\r\n        lyApoderado.setOnClickListener {\r\n            // Abrir la actividad de login para el Apoderado\r\n            val intent = Intent(this@OptionLogin, LoginActivity::class.java)\r\n            intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP\r\n            startActivity(intent)\r\n        }\r\n\r\n        lyDocente.setOnClickListener {\r\n            // Abrir la actividad de login para el Docente\r\n            val intent = Intent(this@OptionLogin, LoginDocente::class.java)\r\n            intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP\r\n            startActivity(intent)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/javierprado/jmapp/view/login/OptionLogin.kt b/app/src/main/java/com/javierprado/jmapp/view/login/OptionLogin.kt
--- a/app/src/main/java/com/javierprado/jmapp/view/login/OptionLogin.kt	(revision 794043868e2c70d2230fb45521e2031a198e0f73)
+++ b/app/src/main/java/com/javierprado/jmapp/view/login/OptionLogin.kt	(date 1712784376643)
@@ -6,6 +6,7 @@
 import android.view.View
 import android.widget.LinearLayout
 import com.javierprado.jmapp.R
+import com.javierprado.jmapp.view.activities.menus.MenuAdministradorActivity
 
 class OptionLogin : AppCompatActivity() {
     override fun onCreate(savedInstanceState: Bundle?) {
@@ -20,7 +21,7 @@
         // Agregando listeners de clics a los layouts
         lyAdmin.setOnClickListener {
             // Abrir la actividad de login para el Administrador
-            val intent = Intent(this@OptionLogin, LoginAdmin::class.java)
+            val intent = Intent(this@OptionLogin, MenuAdministradorActivity::class.java)
             intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP
             startActivity(intent)
         }
